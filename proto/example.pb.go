// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: example.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int64 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *ProtoRequest) Reset() {
	*x = ProtoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRequest) ProtoMessage() {}

func (x *ProtoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRequest.ProtoReflect.Descriptor instead.
func (*ProtoRequest) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoRequest) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type ProtoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int64 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ProtoResponse) Reset() {
	*x = ProtoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoResponse) ProtoMessage() {}

func (x *ProtoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoResponse.ProtoReflect.Descriptor instead.
func (*ProtoResponse) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

var File_example_proto protoreflect.FileDescriptor

var file_example_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x27,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xf3, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x53, 0x71, 0x75, 0x61,
	0x72, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x03, 0x53, 0x75, 0x6d, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x35, 0x0a, 0x04, 0x4c, 0x6f, 0x6f, 0x70, 0x12, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x0c,
	0x53, 0x75, 0x6d, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x14, 0x5a,
	0x12, 0x67, 0x6f, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_example_proto_rawDescOnce sync.Once
	file_example_proto_rawDescData = file_example_proto_rawDesc
)

func file_example_proto_rawDescGZIP() []byte {
	file_example_proto_rawDescOnce.Do(func() {
		file_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_proto_rawDescData)
	})
	return file_example_proto_rawDescData
}

var file_example_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_example_proto_goTypes = []interface{}{
	(*ProtoRequest)(nil),  // 0: proto.ProtoRequest
	(*ProtoResponse)(nil), // 1: proto.ProtoResponse
}
var file_example_proto_depIdxs = []int32{
	0, // 0: proto.ProtoService.Square:input_type -> proto.ProtoRequest
	0, // 1: proto.ProtoService.Sum:input_type -> proto.ProtoRequest
	0, // 2: proto.ProtoService.Loop:input_type -> proto.ProtoRequest
	0, // 3: proto.ProtoService.SumAndReturn:input_type -> proto.ProtoRequest
	1, // 4: proto.ProtoService.Square:output_type -> proto.ProtoResponse
	1, // 5: proto.ProtoService.Sum:output_type -> proto.ProtoResponse
	1, // 6: proto.ProtoService.Loop:output_type -> proto.ProtoResponse
	1, // 7: proto.ProtoService.SumAndReturn:output_type -> proto.ProtoResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_example_proto_init() }
func file_example_proto_init() {
	if File_example_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_example_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_example_proto_goTypes,
		DependencyIndexes: file_example_proto_depIdxs,
		MessageInfos:      file_example_proto_msgTypes,
	}.Build()
	File_example_proto = out.File
	file_example_proto_rawDesc = nil
	file_example_proto_goTypes = nil
	file_example_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProtoServiceClient is the client API for ProtoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProtoServiceClient interface {
	Square(ctx context.Context, in *ProtoRequest, opts ...grpc.CallOption) (*ProtoResponse, error)
	Sum(ctx context.Context, opts ...grpc.CallOption) (ProtoService_SumClient, error)
	Loop(ctx context.Context, in *ProtoRequest, opts ...grpc.CallOption) (ProtoService_LoopClient, error)
	SumAndReturn(ctx context.Context, opts ...grpc.CallOption) (ProtoService_SumAndReturnClient, error)
}

type protoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProtoServiceClient(cc grpc.ClientConnInterface) ProtoServiceClient {
	return &protoServiceClient{cc}
}

func (c *protoServiceClient) Square(ctx context.Context, in *ProtoRequest, opts ...grpc.CallOption) (*ProtoResponse, error) {
	out := new(ProtoResponse)
	err := c.cc.Invoke(ctx, "/proto.ProtoService/Square", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoServiceClient) Sum(ctx context.Context, opts ...grpc.CallOption) (ProtoService_SumClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProtoService_serviceDesc.Streams[0], "/proto.ProtoService/Sum", opts...)
	if err != nil {
		return nil, err
	}
	x := &protoServiceSumClient{stream}
	return x, nil
}

type ProtoService_SumClient interface {
	Send(*ProtoRequest) error
	CloseAndRecv() (*ProtoResponse, error)
	grpc.ClientStream
}

type protoServiceSumClient struct {
	grpc.ClientStream
}

func (x *protoServiceSumClient) Send(m *ProtoRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *protoServiceSumClient) CloseAndRecv() (*ProtoResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ProtoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *protoServiceClient) Loop(ctx context.Context, in *ProtoRequest, opts ...grpc.CallOption) (ProtoService_LoopClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProtoService_serviceDesc.Streams[1], "/proto.ProtoService/Loop", opts...)
	if err != nil {
		return nil, err
	}
	x := &protoServiceLoopClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProtoService_LoopClient interface {
	Recv() (*ProtoResponse, error)
	grpc.ClientStream
}

type protoServiceLoopClient struct {
	grpc.ClientStream
}

func (x *protoServiceLoopClient) Recv() (*ProtoResponse, error) {
	m := new(ProtoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *protoServiceClient) SumAndReturn(ctx context.Context, opts ...grpc.CallOption) (ProtoService_SumAndReturnClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProtoService_serviceDesc.Streams[2], "/proto.ProtoService/SumAndReturn", opts...)
	if err != nil {
		return nil, err
	}
	x := &protoServiceSumAndReturnClient{stream}
	return x, nil
}

type ProtoService_SumAndReturnClient interface {
	Send(*ProtoRequest) error
	Recv() (*ProtoResponse, error)
	grpc.ClientStream
}

type protoServiceSumAndReturnClient struct {
	grpc.ClientStream
}

func (x *protoServiceSumAndReturnClient) Send(m *ProtoRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *protoServiceSumAndReturnClient) Recv() (*ProtoResponse, error) {
	m := new(ProtoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ProtoServiceServer is the server API for ProtoService service.
type ProtoServiceServer interface {
	Square(context.Context, *ProtoRequest) (*ProtoResponse, error)
	Sum(ProtoService_SumServer) error
	Loop(*ProtoRequest, ProtoService_LoopServer) error
	SumAndReturn(ProtoService_SumAndReturnServer) error
}

// UnimplementedProtoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProtoServiceServer struct {
}

func (*UnimplementedProtoServiceServer) Square(context.Context, *ProtoRequest) (*ProtoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Square not implemented")
}
func (*UnimplementedProtoServiceServer) Sum(ProtoService_SumServer) error {
	return status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedProtoServiceServer) Loop(*ProtoRequest, ProtoService_LoopServer) error {
	return status.Errorf(codes.Unimplemented, "method Loop not implemented")
}
func (*UnimplementedProtoServiceServer) SumAndReturn(ProtoService_SumAndReturnServer) error {
	return status.Errorf(codes.Unimplemented, "method SumAndReturn not implemented")
}

func RegisterProtoServiceServer(s *grpc.Server, srv ProtoServiceServer) {
	s.RegisterService(&_ProtoService_serviceDesc, srv)
}

func _ProtoService_Square_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProtoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoServiceServer).Square(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ProtoService/Square",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoServiceServer).Square(ctx, req.(*ProtoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoService_Sum_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProtoServiceServer).Sum(&protoServiceSumServer{stream})
}

type ProtoService_SumServer interface {
	SendAndClose(*ProtoResponse) error
	Recv() (*ProtoRequest, error)
	grpc.ServerStream
}

type protoServiceSumServer struct {
	grpc.ServerStream
}

func (x *protoServiceSumServer) SendAndClose(m *ProtoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *protoServiceSumServer) Recv() (*ProtoRequest, error) {
	m := new(ProtoRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProtoService_Loop_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ProtoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProtoServiceServer).Loop(m, &protoServiceLoopServer{stream})
}

type ProtoService_LoopServer interface {
	Send(*ProtoResponse) error
	grpc.ServerStream
}

type protoServiceLoopServer struct {
	grpc.ServerStream
}

func (x *protoServiceLoopServer) Send(m *ProtoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ProtoService_SumAndReturn_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProtoServiceServer).SumAndReturn(&protoServiceSumAndReturnServer{stream})
}

type ProtoService_SumAndReturnServer interface {
	Send(*ProtoResponse) error
	Recv() (*ProtoRequest, error)
	grpc.ServerStream
}

type protoServiceSumAndReturnServer struct {
	grpc.ServerStream
}

func (x *protoServiceSumAndReturnServer) Send(m *ProtoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *protoServiceSumAndReturnServer) Recv() (*ProtoRequest, error) {
	m := new(ProtoRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ProtoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ProtoService",
	HandlerType: (*ProtoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Square",
			Handler:    _ProtoService_Square_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Sum",
			Handler:       _ProtoService_Sum_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Loop",
			Handler:       _ProtoService_Loop_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SumAndReturn",
			Handler:       _ProtoService_SumAndReturn_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "example.proto",
}
